plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.3'
	id 'io.spring.dependency-management' version '1.1.7'
}
ext {
	set('springCloudVersion', "2024.0.0")
	set('querydslVersion', "5.0.0")
}
java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}
dependencies {
	// ✅ common 모듈
	implementation project(':common-service')
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.h2database:h2'
	// ✅ JPA
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// ✅ Kafka
	implementation 'org.springframework.kafka:spring-kafka'

	// ✅ postgresql
	runtimeOnly 'org.postgresql:postgresql'

	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'com.googlecode.json-simple:json-simple:1.1.1'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'net.logstash.logback:logstash-logback-encoder:8.1'
	implementation 'io.micrometer:micrometer-tracing-bridge-brave'
	implementation 'io.zipkin.reporter2:zipkin-reporter-brave'
	implementation 'io.micrometer:micrometer-registry-prometheus'
	implementation 'p6spy:p6spy:3.9.1'
	// ✅ Feign Client
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	// ✅ Redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}
def querydslDir = "src/main/generated"

sourceSets {
	main.java.srcDirs += querydslDir
}


clean {
	delete file(querydslDir)
}