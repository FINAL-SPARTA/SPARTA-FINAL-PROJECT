ext {
	set('springCloudVersion', "2024.0.0")
	set('querydslVersion', "5.0.0")
}

dependencies {
	implementation project(':common-service')

	// ✅ Web
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// ✅ QueryDSL
	implementation "com.querydsl:querydsl-jpa:${querydslVersion}:jakarta"
	annotationProcessor "com.querydsl:querydsl-apt:${querydslVersion}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// ✅ Jpa
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// ✅ Eureka Client
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

	// ✅ Open Feign
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

	// ✅ Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// ✅ Json
	implementation 'org.json:json:20210307'

	// ✅ Validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// ✅ Redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.redisson:redisson-spring-boot-starter:3.45.1'  // 락 적용을 위한 Redisson 의존성 추가

	annotationProcessor "jakarta.persistence:jakarta.persistence-api:3.1.0"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api:2.1.1"

	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	testImplementation 'org.testcontainers:testcontainers:1.19.0'
	testImplementation 'org.testcontainers:junit-jupiter:1.19.0'

	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'



	// H2
//	runtimeOnly 'com.h2database:h2'
	implementation 'org.postgresql:postgresql:42.7.2'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

def querydslSrcDir = file("src/main/generated")

sourceSets {
	main {
		java {
			srcDirs += querydslSrcDir
		}
	}
}

// Clean 시 QueryDSL 생성 코드 삭제
clean {
	delete querydslSrcDir
}