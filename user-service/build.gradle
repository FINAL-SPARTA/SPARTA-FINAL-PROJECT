plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.3'
	id 'io.spring.dependency-management' version '1.1.7'
}
java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}
ext {
	set('springCloudVersion', "2024.0.0")
	set('querydslVersion', "5.0.0")
}

dependencies {
	implementation project(':common-service')

	// ✅ Web
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// ✅ QueryDSL
	implementation "com.querydsl:querydsl-jpa:${querydslVersion}:jakarta"
	annotationProcessor "com.querydsl:querydsl-apt:${querydslVersion}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// ✅ Spring Security
	implementation 'org.springframework.boot:spring-boot-starter-security'

	// ✅ Jpa
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// ✅ Eureka Client
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

	// ✅ Open Feign
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

	// ✅ Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// ✅ Json
	implementation 'org.json:json:20210307'

	// ✅ Jwt
	implementation 'io.jsonwebtoken:jjwt:0.12.6'

	// ✅ Validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// ✅ Redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// ✅ PostgreSQL
	implementation 'org.postgresql:postgresql:42.7.2'

	// ✅ Kafka
	implementation 'org.springframework.kafka:spring-kafka'
	testImplementation 'org.springframework.kafka:spring-kafka-test'

	// ✅ Logging
	implementation 'net.logstash.logback:logstash-logback-encoder:8.1'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'io.micrometer:micrometer-tracing-bridge-brave'
	implementation 'io.zipkin.reporter2:zipkin-reporter-brave'
	implementation 'io.micrometer:micrometer-registry-prometheus'
	implementation 'p6spy:p6spy:3.9.1'

	annotationProcessor "jakarta.persistence:jakarta.persistence-api:3.1.0"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api:2.1.1"

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	runtimeOnly 'org.postgresql:postgresql'
	// H2
//	runtimeOnly 'com.h2database:h2'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

def querydslSrcDir = file("src/main/generated")

sourceSets {
	main {
		java {
			srcDirs += querydslSrcDir
		}
	}
}

// Clean 시 QueryDSL 생성 코드 삭제
clean {
	delete querydslSrcDir
}
 